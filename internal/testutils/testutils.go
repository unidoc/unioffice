//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package testutils ;import (_afe "crypto/md5";_gf "encoding/hex";_b "encoding/json";_d "errors";_cg "fmt";_ed "github.com/stretchr/testify/require";_cd "golang.org/x/image/font";_ea "golang.org/x/image/font/opentype";_dg "golang.org/x/image/math/fixed";
_be "image";_gd "image/color";_af "image/draw";_ae "image/png";_bbc "io";_ga "io/ioutil";_bb "log";_a "math";_eg "os";_c "os/exec";_gdc "path/filepath";_g "strings";_bf "sync";_ee "testing";_aa "time";);func CompareImages (img1 ,img2 _be .Image )(bool ,error ){_efg :=img1 .Bounds ();
_cde :=0;for _bfdg :=0;_bfdg < _efg .Size ().X ;_bfdg ++{for _bfe :=0;_bfe < _efg .Size ().Y ;_bfe ++{_cfc ,_eda ,_bfff ,_ :=img1 .At (_bfdg ,_bfe ).RGBA ();_eedb ,_aab ,_dc ,_ :=img2 .At (_bfdg ,_bfe ).RGBA ();if _cfc !=_eedb ||_eda !=_aab ||_bfff !=_dc {_cde ++;
};};};_gbg :=float64 (_cde )/float64 (_efg .Dx ()*_efg .Dy ());if _gbg > 0.0001{_cg .Printf ("\u0064\u0069\u0066f \u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0064\u0029\u000a",_gbg ,_cde );return false ,nil ;
};return true ,nil ;};var (ErrRenderNotSupported =_d .New ("\u0072\u0065\u006e\u0064\u0065r\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006c\u0065\u0073 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006f\u006e\u0020\u0074\u0068\u0069\u0073\u0020\u0073\u0079\u0073\u0074\u0065m");
ErrImageSizeNotMatch =_d .New ("\u0069\u006d\u0061ge\u0020\u0073\u0069\u007a\u0065\u0073\u0020\u0064\u006f\u006e\u0027\u0074\u0020\u006d\u0061\u0074\u0063\u0068"););func CopyFile (src ,dst string )error {_ac ,_bffd :=_eg .Open (src );if _bffd !=nil {return _bffd ;
};defer _ac .Close ();_cc ,_bffd :=_eg .Create (dst );if _bffd !=nil {return _bffd ;};defer _cc .Close ();_ ,_bffd =_bbc .Copy (_cc ,_ac );return _bffd ;};type ReferenceFile struct{Timestamp _aa .Time `json:"timestamp"`;Map *ReferenceMap `json:"map,omitempty"`;
_gc string ;};func (_eef *ReferenceMap )UnmarshalJSON (data []byte )error {return _b .Unmarshal (data ,&_eef ._gce )};func _ddb (_dgg ,_ffa _gd .Color )bool {_ec ,_fd ,_bde ,_edag :=_dgg .RGBA ();_aabe ,_ccf ,_cgf ,_bdba :=_ffa .RGBA ();return _ec ==_aabe &&_fd ==_ccf &&_bde ==_cgf &&_edag ==_bdba ;
};func ReadPNG (file string )(_be .Image ,error ){_bfd ,_gcf :=_eg .Open (file );if _gcf !=nil {return nil ,_gcf ;};defer _bfd .Close ();return _ae .Decode (_bfd );};func (_eac *ReferenceMap )Len ()int {return len (_eac ._gce )};func RenderPDFToPNGs (pdfPath string ,dpi int ,outpathTpl string )error {if dpi <=0{dpi =100;
};if _ ,_da :=_c .LookPath ("\u0067\u0073");_da !=nil {return ErrRenderNotSupported ;};return _c .Command ("\u0067\u0073","\u002d\u0073\u0044\u0045\u0056\u0049\u0043\u0045\u003d\u0070\u006e\u0067a\u006c\u0070\u0068\u0061","\u002d\u006f",outpathTpl ,_cg .Sprintf ("\u002d\u0072\u0025\u0064",dpi ),pdfPath ).Run ();
};func (_bcf *ReferenceMap )Copy ()*ReferenceMap {_fb :=ReferenceMap {_gce :make (map[string ]ReferenceEntry ,len (_bcf ._gce ))};for _bdd ,_fa :=range _bcf ._gce {_fb ._gce [_bdd ]=_fa ;};return &_fb ;};func ReadFile (dirPath ,testName string ,createEmpty bool )(*ReferenceFile ,error ){if dirPath ==""&&createEmpty {return &ReferenceFile {Map :&ReferenceMap {}},nil ;
};if dirPath ==""{return nil ,_eg .ErrNotExist ;};_ba :=_gdc .Join (dirPath ,testName +"\u005fr\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u002e\u006a\u0073\u006f\u006e");_adb :=&ReferenceFile {_gc :_ba };_ade ,_fbc :=_eg .Open (_ba );if _d .Is (_fbc ,_eg .ErrNotExist )&&createEmpty {_adb .Timestamp =_aa .Now ().UTC ();
_adb .Map =&ReferenceMap {};return _adb ,nil ;};if _fbc !=nil {return nil ,_fbc ;};defer _ade .Close ();if _bae :=_b .NewDecoder (_ade ).Decode (_adb );_bae !=nil {if _bae .Error ()=="i\u006c\u006c\u0065\u0067\u0061\u006c \u0062\u0061\u0073\u0065\u0036\u0034 \u0064\u0061\u0074\u0061\u0020\u0061\u0074 \u0069\u006e\u0070\u0075\u0074\u0020\u0062\u0079\u0074\u0065 \u0030"&&createEmpty {return _adb ,nil ;
};return nil ,_bae ;};return _adb ,nil ;};type ReferenceMap struct{_bf .Mutex ;_gce map[string ]ReferenceEntry ;};func (_bff *ReferenceMap )MarshalJSON ()([]byte ,error ){return _b .Marshal (_bff ._gce )};func _adf (_fgb ,_gegd _be .Rectangle )bool {return _fgb .Min .X ==_gegd .Min .X &&_fgb .Min .Y ==_gegd .Min .Y &&_fgb .Max .X ==_gegd .Max .X &&_fgb .Max .Y ==_gegd .Max .Y ;
};func (_df *ReferenceFile )Update (currentMap *ReferenceMap )error {if _df ._gc ==""{return nil ;};_cda :=_df .updateMap (currentMap );if _cda ==0{return nil ;};_bc ,_f :=_eg .OpenFile (_df ._gc ,_eg .O_CREATE |_eg .O_TRUNC |_eg .O_WRONLY ,0664);if _f !=nil {return _f ;
};defer _bc .Close ();_df .Timestamp =_aa .Now ().UTC ();_bbe :=_b .NewEncoder (_bc );_bbe .SetIndent ("","\u0009");return _bbe .Encode (_df );};func _fda (_gcd *_be .RGBA ,_eag string ,_egcb string ,_ecf ,_aea int )error {_gdg ,_cfbg :=_ga .ReadFile (_eag );
if _cfbg !=nil {return _cfbg ;};_eab ,_cfbg :=_ea .Parse (_gdg );if _cfbg !=nil {return _cfbg ;};_fdad ,_cfbg :=_ea .NewFace (_eab ,&_ea .FaceOptions {Size :18,DPI :72,Hinting :_cd .HintingNone });if _cfbg !=nil {return _cfbg ;};_fae :=&_cd .Drawer {Dst :_gcd ,Src :_be .NewUniform (_gd .RGBA {200,100,0,255}),Face :_fdad ,Dot :_dg .P (_ecf ,_aea )};
_fae .DrawString (_egcb );return nil ;};func RunRenderOfficeTest (t *_ee .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ,postfix string ){_cgef :=_g .TrimSuffix (_gdc .Base (pdfPath ),_gdc .Ext (pdfPath ));
t .Run ("\u0072\u0065\u006e\u0064\u0065\u0072",func (_fff *_ee .T ){_abd :=_gdc .Join (outputDir ,_cgef );_fad :=_abd +"\u002d%\u0064\u002e\u0070\u006e\u0067";if _cfcf :=RenderPDFToPNGs (pdfPath ,0,_fad );_cfcf !=nil {_fff .Skip (_cfcf );};_dgd :=_cgef +postfix ;
_ege :=_gdc .Join (outputDir ,_dgd );_gge :=_ege +"\u002d%\u0064\u002e\u0070\u006e\u0067";_cdf :=false ;if saveBaseline {_baf :=_gdc .Dir (pdfPath );_gfa :=_gdc .Join (_baf ,_dgd +"\u002e\u0070\u0064\u0066");if _ ,_acd :=_eg .Stat (_gfa );_acd ==nil {_fff .Logf ("\u0052e\u006e\u0064\u0065\u0072\u0020\u004d\u0053\u0020\u004f\u0066\u0066i\u0063\u0065\u0020\u0050\u0044\u0046\u003a\u0020\u0025\u0076",_gfa );
if _bcba :=RenderPDFToPNGs (_gfa ,0,_gge );_bcba !=nil {_fff .Skip (_bcba );};_cdf =true ;};};for _dge :=1;true ;_dge ++{_acf :=_cg .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_abd ,_dge );_ebc :=_gdc .Join (baselineRenderPath ,_cg .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_cgef ,_dge ));
if _ ,_bddc :=_eg .Stat (_acf );_bddc !=nil {break ;};_fff .Logf ("\u0025\u0073",_ebc );if saveBaseline {_fff .Logf ("\u0043\u006fp\u0079\u0069\u006eg\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_acf ,_ebc );_gga :=CopyFile (_acf ,_ebc );if _gga !=nil {_fff .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ebc ,_gga );
};if _cdf {_fee :=_cg .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_ege ,_dge );_efbb :=_gdc .Join (baselineRenderPath ,_cg .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_dgd ,_dge ));_fff .Logf ("\u0043\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u004d\u0053\u0020\u0057\u006f\u0072\u0064 \u0072e\u0073\u0075\u006c\u0074\u0073\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_fee ,_efbb );
_gdb :=CopyFile (_fee ,_efbb );if _gdb !=nil {_fff .Logf ("\u0045\u0052\u0052\u004f\u0052\u0020\u0063\u006f\u0070\u0079\u0069\u006eg\u0020\u0074\u006f \u0025\u0073\u003a\u0020\u0025\u0076\u002c\u0020\u0068\u0061\u0076i\u006e\u0067\u0020d\u0069\u0066\u0066\u0065r\u0065\u006e\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u002c\u0020\u0072\u0065\u0070\u006c\u0061\u0063\u0069\u006eg\u0020\u0069\u0074\u0020\u0077\u0069\u0074\u0068\u0020\u0062\u006ca\u006e\u006b\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064",_efbb ,_gdb );
if _bag :=_edc (_ebc ,_efbb );_bag !=nil {_fff .Fatalf ("\u0045\u0052\u0052\u004f\u0052\u0020c\u0072\u0065\u0061\u0074\u0069\u006e\u0067\u0020\u0065\u006d\u0070\u0074\u0079 \u0069\u006d\u0061\u0067\u0065\u0020\u0025s\u003a\u0020\u0025\u0076",_efbb ,_bag );
};};_fff .Logf ("\u0043\u006fm\u0062\u0069\u006e\u0069\u006eg\u0020\u0055\u006e\u0069\u004ff\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_ebc ,_efbb );
_fbe ,_gdb :=CombinePNGFiles (_ebc ,_efbb );if _eg .IsNotExist (_gdb ){_fff .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_fbe {_fff .Fatal ("\u0055n\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0063\u006f\u006db\u0069\u006e\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0073");
};_fff .Logf ("\u0043\u0072\u0065\u0061\u0074\u0069\u006e\u0067\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0064\u0069\u0066f \u0055n\u0069\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075l\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u004f\u0066\u0066\u0069\u0063\u0065 \u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_ebc ,_efbb );
_fbe ,_eabg ,_ecb ,_gcac ,_gdb :=CreatePNGDiff (_ebc ,_efbb );if _gdb !=nil &&_d .Is (_gdb ,ErrImageSizeNotMatch ){_fff .Fatalf ("\u0045\u0072\u0072\u006fr\u0020\u006f\u006e\u0020\u0063\u0072\u0065\u0061\u0074\u0065 \u0050N\u0047\u0020\u0044\u0069\u0066\u0066\u003a \u0025\u0076",_gdb );
};if _fbe {_fff .Logf ("\u0049\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073\u000a",_eabg );_fff .Logf ("D\u0069\u0066\u0066\u0020Pe\u0072c\u0065\u006e\u0074\u003a\u0020%\u0032\u002e\u0066\u0025\u0025\u000a",_ecb );_fff .Logf ("\u0044i\u0066f\u0020\u0054\u006f\u0074\u0061\u006c\u003a\u0020\u0025\u0066\u000a",_gcac );
_abaa :=_gdc .Base (_eabg );_gdd ,_fbg :=currentHashMap .Read (_abaa );if _fbg &&(_gdd .DiffPercent < _ecb ||_gdd .DiffTotal < _gcac ){_fff .Logf ("\u004e\u0065\u0077\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0068\u0061\u0076\u0069\u006e\u0067 h\u0069g\u0068\u0065\u0072\u0020\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u003a\u0020\u0025\u0066\u0020\u0061\u006e\u0064 \u0074\u006f\u0074\u0061\u006c\u0020\u0025\u0066\u000a",_ecb ,_gcac );
};_fbd ,_egcd :=HashFile (_eabg );_ed .NoError (_fff ,_egcd );_gfb :=_afbe (_fff ,_eabg );if !_fbg ||_gdd .Value !=_fbd ||_gdd .ResultSize !=_gfb ||_gdd .DiffPercent !=_ecb ||_gdd .DiffTotal !=_gcac {_efgf :=ReferenceEntry {Timestamp :_aa .Now ().UTC ().Unix (),Value :_fbd ,ResultSize :_gfb ,DiffPercent :_ecb ,DiffTotal :_gcac };
currentHashMap .Write (_abaa ,_efgf );if _egcd =refFile .Update (currentHashMap );_egcd !=nil {_fff .Logf ("\u0055\u0070\u0064\u0061\u0074\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0020f\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_egcd );
};};};};continue ;};_fff .Run (_cg .Sprintf ("\u0070\u0061\u0067\u0065\u0025\u0064",_dge ),func (_aac *_ee .T ){_aac .Logf ("\u0043o\u006dp\u0061\u0072\u0069\u006e\u0067 \u0025\u0073 \u0076\u0073\u0020\u0025\u0073",_acf ,_ebc );_bead ,_gcbb :=ComparePNGFiles (_acf ,_ebc );
if _eg .IsNotExist (_gcbb ){_aac .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_bead {_aac .Fatal ("\u0077\u0072\u006f\u006eg \u0070\u0061\u0067\u0065\u0020\u0072\u0065\u006e\u0064\u0065\u0072\u0065\u0064");
};});};});};func CombinePNGFiles (file1 ,file2 string )(bool ,error ){_ffd ,_gcb :=ReadPNG (file1 );if _gcb !=nil {return false ,_gcb ;};_egc ,_gcb :=ReadPNG (file2 );if _gcb !=nil {return false ,_gcb ;};_gbgf :=_be .Point {_ffd .Bounds ().Dx (),0};_bea :=_be .Rectangle {_gbgf ,_gbgf .Add (_egc .Bounds ().Size ())};
_add :=_be .Rectangle {_be .Point {0,0},_bea .Max };_gca :=_be .NewRGBA (_add );_af .Draw (_gca ,_ffd .Bounds (),_ffd ,_be .Point {0,0},_af .Src );_af .Draw (_gca ,_bea ,_egc ,_be .Point {0,0},_af .Src );_aba :=_gdc .Dir (file1 );_bec :=_g .TrimSuffix (_gdc .Base (file1 ),_gdc .Ext (file1 ));
_geg ,_gcb :=_eg .Create (_aba +"\u002f"+_bec +"\u002d\u0063\u006f\u006d\u0062\u0069\u006e\u0065\u0064\u002e\u0070\u006e\u0067");if _gcb !=nil {return false ,_gcb ;};defer _geg .Close ();if _fgf :=_ae .Encode (_geg ,_gca );_fgf !=nil {return false ,_fgf ;
};return true ,nil ;};func CreatePNGDiff (src ,dst string )(bool ,string ,float64 ,float64 ,error ){_fbf ,_bda :=ReadPNG (src );if _bda !=nil {return false ,"",0,0,_bda ;};_bdb ,_bda :=ReadPNG (dst );if _bda !=nil {return false ,"",0,0,_bda ;};_gg :=_fbf .Bounds ();
_ce :=_bdb .Bounds ();if !_adf (_gg ,_ce ){if _a .Abs (float64 (_gg .Max .X )-float64 (_ce .Max .X ))> 1{_bb .Printf ("S\u006f\u0075\u0072\u0063\u0065\u0020b\u006f\u0075\u006e\u0064\u0073\u003a \u0025\u0076\u003b\u0020\u0044\u0065\u0073t\u0020\u0062\u006f\u0075\u006e\u0064\u0073\u003a\u0020\u0025v\u000a",_gg ,_ce );
return false ,"",0,0,ErrImageSizeNotMatch ;};};_dcb :=_be .NewRGBA (_be .Rect (0,0,_gg .Max .X ,_gg .Max .Y ));var (_fgff float64 ;_cfb float64 ;);for _fbb :=_gg .Min .Y ;_fbb < _gg .Max .Y ;_fbb ++{for _dfc :=_gg .Min .X ;_dfc < _gg .Max .X ;_dfc ++{_cagb ,_fgfc ,_afb ,_dce :=_fbf .At (_dfc ,_fbb ).RGBA ();
_bfg ,_bbg ,_dd ,_abe :=_bdb .At (_dfc ,_fbb ).RGBA ();_dcb .Set (_dfc ,_fbb ,_gd .RGBA {uint8 (_bfg ),uint8 (_bbg ),uint8 (_dd ),64});_dee :=_dce ==0x00&&_cagb ==0x00&&_fgfc ==0x00&&_afb ==0x00&&_bfg ==0xFFFF&&_bbg ==0xFFFF&&_dd ==0xFFFF;if !_dee &&!_ddb (_fbf .At (_dfc ,_fbb ),_bdb .At (_dfc ,_fbb )){_dcb .Set (_dfc ,_fbb ,_gd .RGBA {uint8 (_cagb ),uint8 (_fgfc ),uint8 (_afb ),uint8 (_dce )});
_efe :=float64 (_cagb )+float64 (_fgfc )+float64 (_afb )+float64 (_dce )-float64 (_bfg )+float64 (_bbg )+float64 (_dd )+float64 (_abe );_cacf :=_a .Sqrt (_a .Pow (_efe /float64 (_gg .Dx ()*_gg .Dy ()),2));_cfb +=_cacf ;_fgff ++;};};};_gaf :=_fgff /float64 (_gg .Dx ()*_gg .Dy ())*100;
_fc :=_gdc .Dir (src );_fbcd :=_g .TrimSuffix (_gdc .Base (src ),_gdc .Ext (src ));_fea ,_bda :=_eg .Create (_fc +"\u002f"+_fbcd +"\u002dd\u0069\u0066\u0066\u002e\u0070\u006eg");if _bda !=nil {return false ,"",0,0,_bda ;};defer _fea .Close ();_ccc :=_g .Replace (_fc ,"\u0072\u0065\u006e\u0064\u0065\u0072","\u0066\u006f\u006et\u0073",1)+"\u002f\u0043\u0061l\u0069\u0062\u0072\u0069\u002e\u0074\u0074\u0066";
_bfa :=_cg .Sprintf ("\u0044\u0069f\u0066\u0065\u0072e\u006e\u0063\u0065\u003a\u0020\u0025\u0066\u0025\u0025",_gaf );_bda =_fda (_dcb ,_ccc ,_bfa ,15,22);if _bda !=nil {return false ,"",0,0,_bda ;};_bfa =_cg .Sprintf ("T\u006ft\u0061\u006c\u0020\u0044\u0069\u0066\u0066\u0065r\u0065\u006e\u0063\u0065: \u0025\u0066",_cfb );
_bda =_fda (_dcb ,_ccc ,_bfa ,15,44);if _bda !=nil {return false ,"",0,0,_bda ;};if _ceg :=_ae .Encode (_fea ,_dcb );_ceg !=nil {return false ,"",0,0,_ceg ;};return true ,_fea .Name (),_gaf ,_cfb ,nil ;};func (_ab *ReferenceFile )updateMap (_ca *ReferenceMap )int {var _ge int ;
if _ab .Map ._gce ==nil {_ab .Map ._gce =map[string ]ReferenceEntry {};};for _fe ,_gb :=range _ca ._gce {_cge ,_cac :=_ab .Map ._gce [_fe ];if !_cac {_ab .Map ._gce [_fe ]=_gb ;_ge ++;continue ;};if string (_cge .Value )!=string (_gb .Value ){_ab .Map ._gce [_fe ]=_gb ;
_ge ++;};};for _dff :=range _ab .Map ._gce {if _ ,_de :=_ca ._gce [_dff ];!_de {delete (_ab .Map ._gce ,_dff );_ge ++;};};return _ge ;};func _edc (_cfd ,_eee string )error {_efb ,_bcb :=_eg .Open (_cfd );if _bcb !=nil {return _bcb ;};defer _efb .Close ();
_eeg ,_ ,_bcb :=_be .DecodeConfig (_efb );if _bcb !=nil {panic (_bcb );};_fbbc :=_be .NewRGBA (_be .Rect (0,0,_eeg .Width ,_eeg .Height ));_faea ,_bcb :=_eg .Create (_eee );if _bcb !=nil {return _bcb ;};defer _faea .Close ();_bcb =_ae .Encode (_faea ,_fbbc );
if _bcb !=nil {return _bcb ;};return nil ;};func (_ff *ReferenceMap )Keys ()(_gad []string ){_gad =make ([]string ,len (_ff ._gce ));var _ef int ;for _eed :=range _ff ._gce {_gad [_ef ]=_eed ;_ef ++;};return _gad ;};func HashFile (file string )(string ,error ){_cag ,_cf :=_eg .Open (file );
if _cf !=nil {return "",_cf ;};defer _cag .Close ();_ag :=_afe .New ();if _ ,_cf =_bbc .Copy (_ag ,_cag );_cf !=nil {return "",_cf ;};return _gf .EncodeToString (_ag .Sum (nil )),nil ;};func RunRenderTest (t *_ee .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ){RunRenderOfficeTest (t ,pdfPath ,outputDir ,baselineRenderPath ,saveBaseline ,currentHashMap ,refFile ,"\u002em\u0073\u0077\u006f\u0072\u0064");
};func _afbe (_afd *_ee .T ,_gcfc string )int64 {_ddbd ,_efbf :=_eg .Stat (_gcfc );_ed .NoError (_afd ,_efbf );return _ddbd .Size ();};func ComparePNGFiles (file1 ,file2 string )(bool ,error ){_afeg ,_cgg :=HashFile (file1 );if _cgg !=nil {return false ,_cgg ;
};_dbb ,_cgg :=HashFile (file2 );if _cgg !=nil {return false ,_cgg ;};if _afeg ==_dbb {return true ,nil ;};_bcd ,_cgg :=ReadPNG (file1 );if _cgg !=nil {return false ,_cgg ;};_dbg ,_cgg :=ReadPNG (file2 );if _cgg !=nil {return false ,_cgg ;};if _bcd .Bounds ()!=_dbg .Bounds (){return false ,nil ;
};return CompareImages (_bcd ,_dbg );};type ReferenceEntry struct{Timestamp int64 `json:"timestamp"`;Value string `json:"value"`;ResultSize int64 `json:"resultSize,omitempty"`;DiffPercent float64 `json:"diffPercent,omitempty"`;DiffTotal float64 `json:"diffValue,omitempty"`;
Invalid bool `json:"markedInvalid,omitempty"`;};func (_bef *ReferenceMap )Read (key string )(ReferenceEntry ,bool ){_bef .Lock ();defer _bef .Unlock ();if _bef ._gce ==nil {return ReferenceEntry {},false ;};_bd ,_edg :=_bef ._gce [key ];return _bd ,_edg ;
};func (_eb *ReferenceMap )Write (key string ,entry ReferenceEntry ){_eb .Lock ();defer _eb .Unlock ();if _eb ._gce ==nil {_eb ._gce =map[string ]ReferenceEntry {};};_eb ._gce [key ]=entry ;};