//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package rw ;import (_c "bytes";_f "encoding/binary";_dc "errors";_cc "fmt";_de "io";_a "io/ioutil";_e "reflect";);func (_gc *Writer )Write (p []byte )(_fgc int ,_fgb error ){_cabf ,_gfb :=_gc .tryGrowByReslice (len (p ));if !_gfb {var _ggc error ;_cabf ,_ggc =_gc .grow (len (p ));
if _ggc !=nil {return 0,_ggc ;};};return copy (_gc ._gge [_cabf :],p ),nil ;};var _ed =_dc .New ("r\u0077.\u0057\u0072\u0069\u0074\u0065\u0072\u003a\u0020t\u006f\u006f\u0020\u006car\u0067\u0065");func (_gdc *Writer )curPos ()int {return int (_gdc .Cap ())-_gdc .Len ()};
func PopRightUI32 (v uint32 )(bool ,uint32 ){return (v &uint32 (1))==1,v >>1};func (_fd *Writer )WriteByteAt (b byte ,off int )error {if off >=len (_fd ._gge ){return _dc .New ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020\u0062\u006f\u0075\u006e\u0064\u0073");
};_fd ._gge [off ]=b ;return nil ;};func NewWriter ()*Writer {return &Writer {_gge :[]byte {}}};const _gffc =int (^uint (0)>>1);func (_acf *Writer )FillWithByte (fillSize int ,b byte )error {for _fa :=0;_fa < fillSize ;_fa ++{if _bba :=_acf .WritePropertyNoAlign (b );
_bba !=nil {return _bba ;};};return nil ;};func (_bg *Writer )WriteProperty (a interface{})error {if _dd :=_bg .align (int (_e .TypeOf (a ).Size ()));_dd !=nil {return _dd ;};return _bg .WritePropertyNoAlign (a );};func (_ea *Reader )ReadPairProperty (p interface{})error {if _fe :=_ea .align (4);
_fe !=nil {return _fe ;};_bb :=_e .ValueOf (p );for _bb .Kind ()==_e .Ptr {_bb =_bb .Elem ();};if !_bb .IsValid (){return _cc .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");};if _gd :=_f .Read (_ea ,_f .LittleEndian ,p );
_gd !=nil {return _gd ;};return nil ;};func PushLeftUI32 (v uint32 ,flag bool )uint32 {v >>=1;if flag {v |=1<<31;};return v ;};type Writer struct{_gge []byte ;_ga int ;};func (_fdf *Writer )AlignLength (alignTo int )error {_da :=_fdf .Len ()%alignTo ;if _da > 0{_ ,_beg :=_fdf .Write (make ([]byte ,alignTo -_da ));
if _beg !=nil {return _beg ;};};return nil ;};func (_bcf *Writer )grow (_dce int )(int ,error ){_abd :=_bcf .Len ();if _abd ==0&&_bcf ._ga !=0{_bcf .reset ();};if _caa ,_gdf :=_bcf .tryGrowByReslice (_dce );_gdf {return _caa ,nil ;};if _bcf ._gge ==nil &&_dce <=_aacb {_bcf ._gge =make ([]byte ,_dce ,_aacb );
return 0,nil ;};_ac :=cap (_bcf ._gge );if _dce <=_ac /2-_abd {copy (_bcf ._gge ,_bcf ._gge [_bcf ._ga :]);}else if _ac > _gffc -_ac -_dce {return 0,_ed ;}else {_dbd :=_eg (2*_ac +_dce );copy (_dbd ,_bcf ._gge [_bcf ._ga :]);_bcf ._gge =_dbd ;};_bcf ._ga =0;
_bcf ._gge =_bcf ._gge [:_abd +_dce ];return _abd ,nil ;};func PushLeftUI64 (v uint64 ,flag bool )uint64 {v >>=1;if flag {v |=1<<63;};return v ;};func _eg (_dfeg int )[]byte {defer func (){if recover ()!=nil {panic (_ed );};}();return make ([]byte ,_dfeg );
};func (_eeb *Writer )tryGrowByReslice (_cb int )(int ,bool ){if _ad :=len (_eeb ._gge );_cb <=cap (_eeb ._gge )-_ad {_eeb ._gge =_eeb ._gge [:_ad +_cb ];return _ad ,true ;};return 0,false ;};func (_fgg *Writer )WriteStringProperty (s string )error {_fgg .align (4);
_bd :=[]byte (s );if _cca :=_f .Write (_fgg ,_f .LittleEndian ,&_bd );_cca !=nil {return _cca ;};return nil ;};func (_gff *Writer )align (_bc int )error {return _gff .Skip ((_bc -(_gff .Len ())%_bc )%_bc )};func (_gcg *Writer )WriteTo (wTo _de .Writer )(_ead int64 ,_dbb error ){if _fdfc :=_gcg .Len ();
_fdfc > 0{_ge ,_cef :=wTo .Write (_gcg ._gge [_gcg ._ga :]);if _ge > _fdfc {return 0,_dc .New ("\u0072\u0077\u002e\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065\u0054\u006f\u003a\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0057\u0072\u0069t\u0065\u0020c\u006f\u0075\u006e\u0074");
};_gcg ._ga +=_ge ;_ead =int64 (_ge );if _cef !=nil {return _ead ,_cef ;};if _ge !=_fdfc {return _ead ,_de .ErrShortWrite ;};};_gcg .reset ();return _ead ,nil ;};func (_ca *Reader )skip (_eb int )error {_ ,_b :=_de .CopyN (_a .Discard ,_ca ,int64 (_eb ));
if _b !=nil {return _b ;};return nil ;};func (_eea *Writer )Bytes ()[]byte {return _eea ._gge };func PopRightUI64 (v uint64 )(bool ,uint64 ){return (v &uint64 (1))==1,v >>1};func (_be *Reader )ReadProperty (a interface{})error {_df :=_e .ValueOf (a );for _df .Kind ()==_e .Ptr {_df =_df .Elem ();
};if !_df .IsValid (){return _cc .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");};if _dfe :=_be .align (int (_df .Type ().Size ()));_dfe !=nil {return _dfe ;};if _gg :=_f .Read (_be ,_f .LittleEndian ,a );
_gg !=nil {return _gg ;};return nil ;};func (_ef *Writer )Len ()int {return len (_ef ._gge )-_ef ._ga };func NewReader (b []byte )(*Reader ,error ){return &Reader {_c .NewReader (b )},nil };func (_cg *Writer )reset (){_cg ._gge =_cg ._gge [:0];_cg ._ga =0};
const _aacb =64;func (_ce *Writer )Skip (n int )error {if n ==0{return nil ;};_ ,_gf :=_ce .Write (make ([]byte ,n ));return _gf ;};func (_aac *Writer )WritePropertyNoAlign (a interface{})error {if _cag :=_f .Write (_aac ,_f .LittleEndian ,a );_cag !=nil {return _cag ;
};return nil ;};func (_eef *Reader )ReadStringProperty (n uint32 )(string ,error ){if _aa :=_eef .align (4);_aa !=nil {return "",_aa ;};_fg :=make ([]byte ,n );if _db :=_f .Read (_eef ,_f .LittleEndian ,&_fg );_db !=nil {return "",_db ;};return string (_fg ),nil ;
};type Reader struct{*_c .Reader };func (_ee *Reader )align (_bf int )error {return _ee .skip ((_bf -_ee .curPos ()%_bf )%_bf )};func (_ab *Reader )curPos ()int {return int (_ab .Size ())-_ab .Len ()};func (_af *Writer )Cap ()int {return cap (_af ._gge )};
